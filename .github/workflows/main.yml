# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  repository_dispatch:
    types: fantomas-commit-on-master

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.202

    - name: Restore local tools
      run: dotnet tool restore

    - name: docker run
      run: /usr/bin/docker run --rm -v ${{ github.workspace }}:/workspace -w /workspace nojaf/fable-azure-functions:1.1 bash -c "dotnet tool restore && dotnet fake run build.fsx -t CI"

    - name: remove obj
      run: rm ./infrastructure/obj -rf && rm ./paket-files/ -rf
    # Run the FAKE script inside our own Docker image, this is necessary for the Azure Functions to be published correctly.
    # Honestly, don't ask
    # - uses: addnab/docker-run-action@v3
    #   with:
    #     image: nojaf/fable-azure-functions:1.1
    #     options: -v ${{ github.workspace }}:/workspace -w /workspace --user "$(id -u):$(id -g)"
    #     run: |
    #       dotnet tool restore
    #       dotnet fake run build.fsx -t CI

    - name: Deploy Frontend
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./src/client/build

    - uses: pulumi/actions@v3
      with:
        command: up
        stack-name: main
        work-dir: ./infrastructure
      env:
        ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
        ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
        PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
